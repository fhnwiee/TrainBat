%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Diego\switchdrive\Master of Science\P9 Master Thesis\05_Modellierung Zugsystem\Stadelhofen-Altstetten.xlsx
%    Worksheet: ZSTH_ZUE
%
% Auto-generated by MATLAB on 31-May-2022 14:56:27

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 11);

% Specify sheet and range
opts.Sheet = "ZSTH_ZUE";
opts.DataRange = "A2:K132";

% Specify column names and types
opts.VariableNames = ["Radius", "s", "Tunnel", "ZrichStadelhofen", "WKM", "st", "maxSpeed", "R150", "R135", "berhhung", "BUe"];
opts.VariableTypes = ["double", "double", "double", "string", "double", "double", "double", "double", "double", "double", "string"];

% Specify variable properties
opts = setvaropts(opts, ["ZrichStadelhofen", "BUe"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["ZrichStadelhofen", "BUe"], "EmptyFieldRule", "auto");

% Import the data
StadelhofenAltstettenS1 = readtable("C:\Users\Diego\switchdrive\Master of Science\P9 Master Thesis\05_Modellierung Zugsystem\Stadelhofen-Altstetten.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts

% get values for Stadelhofen to Zurich ZHDB
ZSTH_ZUE.gradients = StadelhofenAltstettenS1{:,["st" "s"]};
ZSTH_ZUE.speedLimits = StadelhofenAltstettenS1{:,["st" "maxSpeed"]};
ZSTH_ZUE.id = "ZSTH_ZUE";
ZSTH_ZUE.stations = StadelhofenAltstettenS1{[1 end], "st"};

% get values for Zurich ZHDB to Stadelhofen
ZUE_ZSTH.gradients = flip(ZSTH_ZUE.gradients);
ZUE_ZSTH.speedLimits = flip(ZSTH_ZUE.speedLimits);
ZUE_ZSTH.id = "ZUE_ZSTH";
ZUE_ZSTH.stations = ZSTH_ZUE.stations;

ZUE_ZSTH.gradients(:,3) = ZUE_ZSTH.gradients(:,1);
ZUE_ZSTH.gradients(:,2) = ZUE_ZSTH.gradients(:,2) * (-1);

ZUE_ZSTH.speedLimits(:,3) = ZUE_ZSTH.speedLimits(:,1);

for i = 1:length(ZUE_ZSTH.gradients(:,1))
    if (i == 1)
        ZUE_ZSTH.gradients(1,1) = 0;
        ZUE_ZSTH.speedLimits(1,1) = 0;
    else
        ZUE_ZSTH.gradients(i,1) = ZUE_ZSTH.gradients(i-1,1) + (ZUE_ZSTH.gradients(i-1,3) - ZUE_ZSTH.gradients(i,3));
        ZUE_ZSTH.speedLimits(i,1) = ZUE_ZSTH.speedLimits(i-1,1) + (ZUE_ZSTH.speedLimits(i-1,3) - ZUE_ZSTH.speedLimits(i,3));
    end
end

ZUE_ZSTH.gradients(:,3) = [];
ZUE_ZSTH.speedLimits(:,3) = [];

%% Import data from spreadsheet
% get values for Zurich ZHDB to Hardbrücke
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Diego\switchdrive\Master of Science\P9 Master Thesis\05_Modellierung Zugsystem\Stadelhofen-Altstetten.xlsx
%    Worksheet: ZUE_ZHDB
%
% Auto-generated by MATLAB on 31-May-2022 16:30:07

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 11);

% Specify sheet and range
opts.Sheet = "ZUE_ZHDB";
opts.DataRange = "A2:K96";

% Specify column names and types
opts.VariableNames = ["Radius", "s", "Tunnel", "ZrichHB", "WKM", "st", "maxSpeed", "R150", "R135", "berhhung", "BUe"];
opts.VariableTypes = ["double", "double", "double", "string", "double", "double", "double", "double", "double", "double", "string"];

% Specify variable properties
opts = setvaropts(opts, ["ZrichHB", "BUe"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["ZrichHB", "BUe"], "EmptyFieldRule", "auto");

% Import the data
StadelhofenAltstettenS2 = readtable("C:\Users\Diego\switchdrive\Master of Science\P9 Master Thesis\05_Modellierung Zugsystem\Stadelhofen-Altstetten.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts

% get values for Stadelhofen to Zurich ZHDB
ZUE_ZHDB.gradients = StadelhofenAltstettenS2{:,["st" "s"]};
ZUE_ZHDB.speedLimits = StadelhofenAltstettenS2{:,["st" "maxSpeed"]};
ZUE_ZHDB.id = "ZUE_ZHDB";
ZUE_ZHDB.stations = StadelhofenAltstettenS2{[1 end], "st"};

% get values for Hardbrücke to Zürich ZHDB
ZHDB_ZUE.gradients = flip(ZUE_ZHDB.gradients);
ZHDB_ZUE.speedLimits = flip(ZUE_ZHDB.speedLimits);
ZHDB_ZUE.id = "ZHDB_ZUE";
ZHDB_ZUE.stations = ZUE_ZHDB.stations;

ZHDB_ZUE.gradients(:,3) = ZHDB_ZUE.gradients(:,1);
ZHDB_ZUE.gradients(:,2) = ZHDB_ZUE.gradients(:,2) * (-1);

ZHDB_ZUE.speedLimits(:,3) = ZHDB_ZUE.gradients(:,1);

for i = 1:length(ZHDB_ZUE.gradients(:,1))
    if (i == 1)
        ZHDB_ZUE.gradients(1,1) = 0;
        ZHDB_ZUE.speedLimits(1,1) = 0;
    else
        ZHDB_ZUE.gradients(i,1) = ZHDB_ZUE.gradients(i-1,1) + (ZHDB_ZUE.gradients(i-1,3) - ZHDB_ZUE.gradients(i,3));
        ZHDB_ZUE.speedLimits(i,1) = ZHDB_ZUE.speedLimits(i-1,1) + (ZHDB_ZUE.speedLimits(i-1,3) - ZHDB_ZUE.speedLimits(i,3));
    end
end
ZHDB_ZUE.gradients(:,3) = [];
ZHDB_ZUE.speedLimits(:,3) = [];



%% mögliche Strecken
Strecken = struct('ZUE_ZHDB' ,ZUE_ZHDB, 'ZHDB_ZUE', ZHDB_ZUE, 'ZUE_ZSTH', ZUE_ZSTH, 'ZSTH_ZUE', ZSTH_ZUE);

clear StadelhofenAltstettenS2 StadelhofenAltstettenS1 i



        

        


